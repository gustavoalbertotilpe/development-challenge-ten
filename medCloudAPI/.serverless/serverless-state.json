{
  "service": {
    "service": "medcloud",
    "serviceObject": {
      "name": "medcloud"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs14.x",
      "region": "us-east-1",
      "environment": {
        "PG_DB": "medcloud",
        "PG_USER": "root",
        "PG_PASSWORD": "asDfsAd1323",
        "PG_PORT": "5432",
        "PG_HOST": "tilpe.c2yjptqcse6n.us-east-1.rds.amazonaws.com"
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CreatePacienteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/medcloud-dev-createPaciente"
            }
          },
          "GetPacientesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/medcloud-dev-getPacientes"
            }
          },
          "UpdatePacienteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/medcloud-dev-updatePaciente"
            }
          },
          "DeletePacienteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/medcloud-dev-deletePaciente"
            }
          },
          "FindPacienteByIdLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/medcloud-dev-findPacienteById"
            }
          },
          "FindPacienteByEmailLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/medcloud-dev-findPacienteByEmail"
            }
          },
          "FindPacienteByCPFLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/medcloud-dev-findPacienteByCPF"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "medcloud",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/medcloud-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/medcloud-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "medcloud",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CreatePacienteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/medcloud/dev/1682377079385-2023-04-24T22:57:59.385Z/medcloud.zip"
              },
              "Handler": "dist/controllers/apiPatients.createPaciente",
              "Runtime": "nodejs14.x",
              "FunctionName": "medcloud-dev-createPaciente",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PG_DB": "medcloud",
                  "PG_USER": "root",
                  "PG_PASSWORD": "asDfsAd1323",
                  "PG_PORT": "5432",
                  "PG_HOST": "tilpe.c2yjptqcse6n.us-east-1.rds.amazonaws.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreatePacienteLogGroup"
            ]
          },
          "GetPacientesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/medcloud/dev/1682377079385-2023-04-24T22:57:59.385Z/medcloud.zip"
              },
              "Handler": "dist/controllers/apiPatients.getAll",
              "Runtime": "nodejs14.x",
              "FunctionName": "medcloud-dev-getPacientes",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PG_DB": "medcloud",
                  "PG_USER": "root",
                  "PG_PASSWORD": "asDfsAd1323",
                  "PG_PORT": "5432",
                  "PG_HOST": "tilpe.c2yjptqcse6n.us-east-1.rds.amazonaws.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetPacientesLogGroup"
            ]
          },
          "UpdatePacienteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/medcloud/dev/1682377079385-2023-04-24T22:57:59.385Z/medcloud.zip"
              },
              "Handler": "dist/controllers/apiPatients.updatePaciente",
              "Runtime": "nodejs14.x",
              "FunctionName": "medcloud-dev-updatePaciente",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PG_DB": "medcloud",
                  "PG_USER": "root",
                  "PG_PASSWORD": "asDfsAd1323",
                  "PG_PORT": "5432",
                  "PG_HOST": "tilpe.c2yjptqcse6n.us-east-1.rds.amazonaws.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdatePacienteLogGroup"
            ]
          },
          "DeletePacienteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/medcloud/dev/1682377079385-2023-04-24T22:57:59.385Z/medcloud.zip"
              },
              "Handler": "dist/controllers/apiPatients.deletePaciente",
              "Runtime": "nodejs14.x",
              "FunctionName": "medcloud-dev-deletePaciente",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PG_DB": "medcloud",
                  "PG_USER": "root",
                  "PG_PASSWORD": "asDfsAd1323",
                  "PG_PORT": "5432",
                  "PG_HOST": "tilpe.c2yjptqcse6n.us-east-1.rds.amazonaws.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeletePacienteLogGroup"
            ]
          },
          "FindPacienteByIdLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/medcloud/dev/1682377079385-2023-04-24T22:57:59.385Z/medcloud.zip"
              },
              "Handler": "dist/controllers/apiPatients.findPacienteById",
              "Runtime": "nodejs14.x",
              "FunctionName": "medcloud-dev-findPacienteById",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PG_DB": "medcloud",
                  "PG_USER": "root",
                  "PG_PASSWORD": "asDfsAd1323",
                  "PG_PORT": "5432",
                  "PG_HOST": "tilpe.c2yjptqcse6n.us-east-1.rds.amazonaws.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "FindPacienteByIdLogGroup"
            ]
          },
          "FindPacienteByEmailLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/medcloud/dev/1682377079385-2023-04-24T22:57:59.385Z/medcloud.zip"
              },
              "Handler": "dist/controllers/apiPatients.findPacienteByEmail",
              "Runtime": "nodejs14.x",
              "FunctionName": "medcloud-dev-findPacienteByEmail",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PG_DB": "medcloud",
                  "PG_USER": "root",
                  "PG_PASSWORD": "asDfsAd1323",
                  "PG_PORT": "5432",
                  "PG_HOST": "tilpe.c2yjptqcse6n.us-east-1.rds.amazonaws.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "FindPacienteByEmailLogGroup"
            ]
          },
          "FindPacienteByCPFLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/medcloud/dev/1682377079385-2023-04-24T22:57:59.385Z/medcloud.zip"
              },
              "Handler": "dist/controllers/apiPatients.findPacienteByCPF",
              "Runtime": "nodejs14.x",
              "FunctionName": "medcloud-dev-findPacienteByCPF",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PG_DB": "medcloud",
                  "PG_USER": "root",
                  "PG_PASSWORD": "asDfsAd1323",
                  "PG_PORT": "5432",
                  "PG_HOST": "tilpe.c2yjptqcse6n.us-east-1.rds.amazonaws.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "FindPacienteByCPFLogGroup"
            ]
          },
          "CreatePacienteLambdaVersionswA3tDoRkm1BvQ8y21wl4RIcWJ55I0b24uV5KTvT7d0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreatePacienteLambdaFunction"
              },
              "CodeSha256": "39FdEDJxuTp4Oux/FlPxfa9INaW21+0J2iEjbG42pss="
            }
          },
          "GetPacientesLambdaVersionI9FDXKkJPJHAFoHP3M4QEflCXV3SnfsBXMgSElCQi4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetPacientesLambdaFunction"
              },
              "CodeSha256": "39FdEDJxuTp4Oux/FlPxfa9INaW21+0J2iEjbG42pss="
            }
          },
          "UpdatePacienteLambdaVersionLN6wMEgoCycslPMLdbjEx8O15PrPVsSAtBMGfyL6qdM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdatePacienteLambdaFunction"
              },
              "CodeSha256": "39FdEDJxuTp4Oux/FlPxfa9INaW21+0J2iEjbG42pss="
            }
          },
          "DeletePacienteLambdaVersion9oa7M3uOT2JqJ5Hfl3S4X6cGdNye62cnAOaTJoGly8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeletePacienteLambdaFunction"
              },
              "CodeSha256": "39FdEDJxuTp4Oux/FlPxfa9INaW21+0J2iEjbG42pss="
            }
          },
          "FindPacienteByIdLambdaVersionMxyHPLksovgLUCgLYdYbQEu78a6927kvxIq4BGAs4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FindPacienteByIdLambdaFunction"
              },
              "CodeSha256": "39FdEDJxuTp4Oux/FlPxfa9INaW21+0J2iEjbG42pss="
            }
          },
          "FindPacienteByEmailLambdaVersionG6CDGQ6vkBuMFghHZrtzPCYixlWa3qHZwdhtHn7PFM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FindPacienteByEmailLambdaFunction"
              },
              "CodeSha256": "39FdEDJxuTp4Oux/FlPxfa9INaW21+0J2iEjbG42pss="
            }
          },
          "FindPacienteByCPFLambdaVersionLg2afP6lg3lQtGiTza0UrtAkfzJYIavuIBCo2L3akI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FindPacienteByCPFLambdaFunction"
              },
              "CodeSha256": "39FdEDJxuTp4Oux/FlPxfa9INaW21+0J2iEjbG42pss="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-medcloud",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourcePaciente": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "paciente",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePacienteIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePaciente"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePacientebyemail": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "pacientebyemail",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePacientebyemailEmailVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePacientebyemail"
              },
              "PathPart": "{email}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePacientebycpf": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "pacientebycpf",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePacientebycpfCpfVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePacientebycpf"
              },
              "PathPart": "{cpf}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPacientePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePaciente"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreatePacienteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreatePacienteLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPacienteGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePaciente"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetPacientesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetPacientesLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPacienteIdVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePacienteIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdatePacienteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UpdatePacienteLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPacienteIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePacienteIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeletePacienteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeletePacienteLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPacienteIdVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePacienteIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FindPacienteByIdLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "FindPacienteByIdLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPacientebyemailEmailVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePacientebyemailEmailVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FindPacienteByEmailLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "FindPacienteByEmailLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPacientebycpfCpfVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePacientebycpfCpfVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FindPacienteByCPFLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "FindPacienteByCPFLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1682377057677": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodPacientePost",
              "ApiGatewayMethodPacienteGet",
              "ApiGatewayMethodPacienteIdVarPut",
              "ApiGatewayMethodPacienteIdVarDelete",
              "ApiGatewayMethodPacienteIdVarGet",
              "ApiGatewayMethodPacientebyemailEmailVarGet",
              "ApiGatewayMethodPacientebycpfCpfVarGet"
            ]
          },
          "CreatePacienteLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreatePacienteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetPacientesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetPacientesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdatePacienteLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdatePacienteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeletePacienteLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeletePacienteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "FindPacienteByIdLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FindPacienteByIdLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "FindPacienteByEmailLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FindPacienteByEmailLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "FindPacienteByCPFLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FindPacienteByCPFLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-medcloud-dev-ServerlessDeploymentBucketName"
            }
          },
          "CreatePacienteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreatePacienteLambdaVersionswA3tDoRkm1BvQ8y21wl4RIcWJ55I0b24uV5KTvT7d0"
            },
            "Export": {
              "Name": "sls-medcloud-dev-CreatePacienteLambdaFunctionQualifiedArn"
            }
          },
          "GetPacientesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetPacientesLambdaVersionI9FDXKkJPJHAFoHP3M4QEflCXV3SnfsBXMgSElCQi4"
            },
            "Export": {
              "Name": "sls-medcloud-dev-GetPacientesLambdaFunctionQualifiedArn"
            }
          },
          "UpdatePacienteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdatePacienteLambdaVersionLN6wMEgoCycslPMLdbjEx8O15PrPVsSAtBMGfyL6qdM"
            },
            "Export": {
              "Name": "sls-medcloud-dev-UpdatePacienteLambdaFunctionQualifiedArn"
            }
          },
          "DeletePacienteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeletePacienteLambdaVersion9oa7M3uOT2JqJ5Hfl3S4X6cGdNye62cnAOaTJoGly8"
            },
            "Export": {
              "Name": "sls-medcloud-dev-DeletePacienteLambdaFunctionQualifiedArn"
            }
          },
          "FindPacienteByIdLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FindPacienteByIdLambdaVersionMxyHPLksovgLUCgLYdYbQEu78a6927kvxIq4BGAs4"
            },
            "Export": {
              "Name": "sls-medcloud-dev-FindPacienteByIdLambdaFunctionQualifiedArn"
            }
          },
          "FindPacienteByEmailLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FindPacienteByEmailLambdaVersionG6CDGQ6vkBuMFghHZrtzPCYixlWa3qHZwdhtHn7PFM"
            },
            "Export": {
              "Name": "sls-medcloud-dev-FindPacienteByEmailLambdaFunctionQualifiedArn"
            }
          },
          "FindPacienteByCPFLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FindPacienteByCPFLambdaVersionLg2afP6lg3lQtGiTza0UrtAkfzJYIavuIBCo2L3akI"
            },
            "Export": {
              "Name": "sls-medcloud-dev-FindPacienteByCPFLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-medcloud-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "createPaciente": {
        "handler": "dist/controllers/apiPatients.createPaciente",
        "events": [
          {
            "http": {
              "path": "paciente",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "medcloud-dev-createPaciente",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "CreatePacienteLambdaVersionswA3tDoRkm1BvQ8y21wl4RIcWJ55I0b24uV5KTvT7d0"
      },
      "getPacientes": {
        "handler": "dist/controllers/apiPatients.getAll",
        "events": [
          {
            "http": {
              "path": "paciente",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "medcloud-dev-getPacientes",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "GetPacientesLambdaVersionI9FDXKkJPJHAFoHP3M4QEflCXV3SnfsBXMgSElCQi4"
      },
      "updatePaciente": {
        "handler": "dist/controllers/apiPatients.updatePaciente",
        "events": [
          {
            "http": {
              "path": "paciente/{id}",
              "method": "put",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "medcloud-dev-updatePaciente",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "UpdatePacienteLambdaVersionLN6wMEgoCycslPMLdbjEx8O15PrPVsSAtBMGfyL6qdM"
      },
      "deletePaciente": {
        "handler": "dist/controllers/apiPatients.deletePaciente",
        "events": [
          {
            "http": {
              "path": "paciente/{id}",
              "method": "delete",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "medcloud-dev-deletePaciente",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "DeletePacienteLambdaVersion9oa7M3uOT2JqJ5Hfl3S4X6cGdNye62cnAOaTJoGly8"
      },
      "findPacienteById": {
        "handler": "dist/controllers/apiPatients.findPacienteById",
        "events": [
          {
            "http": {
              "path": "paciente/{id}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "medcloud-dev-findPacienteById",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "FindPacienteByIdLambdaVersionMxyHPLksovgLUCgLYdYbQEu78a6927kvxIq4BGAs4"
      },
      "findPacienteByEmail": {
        "handler": "dist/controllers/apiPatients.findPacienteByEmail",
        "events": [
          {
            "http": {
              "path": "pacientebyemail/{email}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "medcloud-dev-findPacienteByEmail",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "FindPacienteByEmailLambdaVersionG6CDGQ6vkBuMFghHZrtzPCYixlWa3qHZwdhtHn7PFM"
      },
      "findPacienteByCPF": {
        "handler": "dist/controllers/apiPatients.findPacienteByCPF",
        "events": [
          {
            "http": {
              "path": "pacientebycpf/{cpf}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "medcloud-dev-findPacienteByCPF",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "FindPacienteByCPFLambdaVersionLg2afP6lg3lQtGiTza0UrtAkfzJYIavuIBCo2L3akI"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "medcloud",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "C:\\Users\\Gustavo\\Desktop\\api\\.serverless\\medcloud.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/medcloud/dev/1682377079385-2023-04-24T22:57:59.385Z",
    "artifact": "medcloud.zip"
  }
}